{"ast":null,"code":"var _jsxFileName = \"/Users/jekin/Documents/GitHub.nosync/chatting-kafka-react/react-client/src/ChatMessenger.js\";\nimport React, { Component } from \"react\";\nimport { Launcher } from \"react-chat-window\";\nimport Stomp from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nexport default class ChatMessenger extends Component {\n  constructor() {\n    super();\n    this.id = Date.now().toString();\n    this.socket = new SockJS(\"http://localhost:8080/chatting\");\n    this.stompClient = Stomp.over(this.socket);\n\n    this.addMessage = message => {\n      message = { ...message,\n        author: message.author === this.id ? \"me\" : \"them\"\n      };\n      this.setState({\n        messageList: this.state.messageList.concat(message)\n      });\n    };\n\n    this.state = {\n      messageList: []\n    };\n  }\n\n  componentDidMount() {\n    this.stompClient.connect({}, frame => {\n      this.stompClient.subscribe(\"/topic/chatting_Message\", notification => {\n        this.addMessage(JSON.parse(notification.body));\n      });\n    });\n  }\n\n  _onMessageWasSent(message) {\n    this.stompClient.send(\"/app/chatMessage\", {}, JSON.stringify({ ...message,\n      author: this.id\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Launcher, {\n      isOpen: true,\n      agentProfile: {\n        teamName: \"Chat Window\",\n        imageUrl: \"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\"\n      },\n      onMessageWasSent: this._onMessageWasSent.bind(this),\n      messageList: this.state.messageList,\n      showEmoji: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jekin/Documents/GitHub.nosync/chatting-kafka-react/react-client/src/ChatMessenger.js"],"names":["React","Component","Launcher","Stomp","SockJS","ChatMessenger","constructor","id","Date","now","toString","socket","stompClient","over","addMessage","message","author","setState","messageList","state","concat","componentDidMount","connect","frame","subscribe","notification","JSON","parse","body","_onMessageWasSent","send","stringify","render","teamName","imageUrl","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,eAAe,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACnDK,EAAAA,WAAW,GAAG;AACZ;AADY,SAMdC,EANc,GAMTC,IAAI,CAACC,GAAL,GAAWC,QAAX,EANS;AAAA,SAOdC,MAPc,GAOL,IAAIP,MAAJ,CAAW,gCAAX,CAPK;AAAA,SAQdQ,WARc,GAQAT,KAAK,CAACU,IAAN,CAAW,KAAKF,MAAhB,CARA;;AAAA,SAkBdG,UAlBc,GAkBAC,OAAD,IAAa;AACxBA,MAAAA,OAAO,GAAG,EAAE,GAAGA,OAAL;AAAcC,QAAAA,MAAM,EAAED,OAAO,CAACC,MAAR,KAAmB,KAAKT,EAAxB,GAA6B,IAA7B,GAAoC;AAA1D,OAAV;AACA,WAAKU,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,CAAuBE,MAAvB,CAA8BL,OAA9B;AADD,OAAd;AAGD,KAvBa;;AAEZ,SAAKI,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAKDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,WAAL,CAAiBU,OAAjB,CAAyB,EAAzB,EAA8BC,KAAD,IAAW;AACtC,WAAKX,WAAL,CAAiBY,SAAjB,CAA2B,yBAA3B,EAAuDC,YAAD,IAAkB;AACtE,aAAKX,UAAL,CAAgBY,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,IAAxB,CAAhB;AACD,OAFD;AAGD,KAJD;AAKD;;AASDC,EAAAA,iBAAiB,CAACd,OAAD,EAAU;AACzB,SAAKH,WAAL,CAAiBkB,IAAjB,CAAsB,kBAAtB,EAA0C,EAA1C,EAA8CJ,IAAI,CAACK,SAAL,CAAe,EAAE,GAAGhB,OAAL;AAAcC,MAAAA,MAAM,EAAE,KAAKT;AAA3B,KAAf,CAA9C;AACD;;AAEDyB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,aADE;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAFhB;AAME,MAAA,gBAAgB,EAAE,KAAKL,iBAAL,CAAuBM,IAAvB,CAA4B,IAA5B,CANpB;AAOE,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWD,WAP1B;AAQE,MAAA,SAAS,EAAE,KARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAcD;;AA7CkD","sourcesContent":["import React, { Component } from \"react\";\nimport { Launcher } from \"react-chat-window\";\nimport Stomp from \"stompjs\";\nimport SockJS from \"sockjs-client\";\n\nexport default class ChatMessenger extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messageList: [],\n    };\n  }\n  id = Date.now().toString();\n  socket = new SockJS(\"http://localhost:8080/chatting\");\n  stompClient = Stomp.over(this.socket);\n\n  componentDidMount() {\n    this.stompClient.connect({}, (frame) => {\n      this.stompClient.subscribe(\"/topic/chatting_Message\", (notification) => {\n        this.addMessage(JSON.parse(notification.body));\n      });\n    });\n  }\n\n  addMessage = (message) => {\n    message = { ...message, author: message.author === this.id ? \"me\" : \"them\" };\n    this.setState({\n      messageList: this.state.messageList.concat(message),\n    });\n  };\n\n  _onMessageWasSent(message) {\n    this.stompClient.send(\"/app/chatMessage\", {}, JSON.stringify({ ...message, author: this.id }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Launcher\n          isOpen\n          agentProfile={{\n            teamName: \"Chat Window\",\n            imageUrl: \"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\",\n          }}\n          onMessageWasSent={this._onMessageWasSent.bind(this)}\n          messageList={this.state.messageList}\n          showEmoji={false}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}